


		Для того чтобы ссылаться на элементы или добавлять слушатели событий, мы должны делать это внутри наших компонент. 

		useRef - метод, который позволяет ссылаться на элемент в самом DOM (не Virt. DOM). Чтобы брать значения например. PS - менять поведение или использовать скрипты не рекомендуется.


		Для того чтобы ссылаться на элемент и использовать его в функциональной компоненте мы должны:

		1) Импортировать useRef - 			import {useRef} from 'react';

		2) Создать ссылку -				let textAreaElement = useRef();				// Ссылку мы должны создавать внутри функции комонента.

		3) Добавить в элемент - 			<textarea ref={textAreaElement}></textarea>

		4) Обращение непосредственно к HTML элементу -	textAreaElement.current					// Тут мы получили html элемент и мы можем работать с ним //  textAreaElement.current.value

		!НО с использованием .current мы обращаемся уже к реальному DOM. Нам надо быть осторожным... Например, мы не можем добавлять слушатели событий, мы можем например получить значение элемента.
















		Для добавления слушателя событий в React добавляем аттрибут с событием, а значении пишем callback функцию, который выполнится.

		Пример: <button onclick={  ()=> alert("Clicked !")  }>Click me</button>

		PS - Для понятного кода лучше логику кнопки писать в отдельной функции и добавить в слушатель событий. !!Но вызывать при добавлении не надо.

		В реакте мы забываем про Query Selector, addEventListener и jQuery. т.к. мы работаем с Virtual DOM и не имеем права лесть в DOM, этим занимается реакт.

